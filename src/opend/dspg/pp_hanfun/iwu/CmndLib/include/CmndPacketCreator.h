#ifndef CMDN_PACKET_CREATOR_H
#define CMDN_PACKET_CREATOR_H

#include "CmndApiExported.h"
#include "TypeDefs.h"
#include "CmndApiPacket.h"

extern_c_begin

///////////////////////////////////////////////////////////////////////////////
////////////////////////////ATTR REP///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_AttrRep_GetReportValuesRes(t_st_Packet* packet, t_st_hanCmndIeReportInfoInd* reportInfo);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////ALERT/////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_Alert_NotifyStatusReq(t_st_Packet* packet, u8 unitId, u16 unitType, u32 alertType);
bool p_Alert_NotifyStatusRes(t_st_Packet* packet, u8 unitId, u8 responseCode);

///////////////////////////////////////////////////////////////////////////////
///////////////////////////DEVICE_MANAGEMENT///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_DeviceManagement_RegisterDeviceReq(t_st_Packet* packet, u8* rfpi);
bool p_DeviceManagement_DeregisterDeviceReq(t_st_Packet* packet);

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////FUN//////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_Fun_SendReq(t_st_Packet* packet, t_st_hanCmndIeFun* funIe);

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////GENERAL//////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_General_GetStatusReq(t_st_Packet* packet);
bool p_General_GetVersionReq(t_st_Packet* packet, t_en_hanCmndGeneralVersion version);
bool p_General_LinkMaintainStartReq(t_st_Packet* packet, t_st_hanCmndIeLinkMaintain* pst_LinkMaintain);
bool p_General_LinkMaintainStopReq(t_st_Packet* packet);
bool p_General_HelloReq(t_st_Packet* packet);
bool p_General_TransactionStartReq(t_st_Packet* packet);
bool p_General_TransactionEndReq(t_st_Packet* packet);

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////KEEP ALIVE///////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_KeepAlive_IamAliveReq(t_st_Packet* packet);
bool p_KeepAlive_GetAttribReq(t_st_Packet* packet, u8 attrId);
bool p_KeepAlive_GetAttribRes(t_st_Packet* packet, t_st_hanCmndIeAttributeValue* attrVal);
bool p_KeepAlive_SetAttribRes(t_st_Packet* packet, u8 response_code, u8 attrId);

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////ON OFF///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_OnOff_OnReq(t_st_Packet* packet, u8 unitId);
bool p_OnOff_OffReq(t_st_Packet* packet, u8 unitId);
bool p_OnOff_ToggleReq(t_st_Packet* packet, u8 unitId);
bool p_OnOff_GetAttribReq(t_st_Packet* packet, u8 unitId, u8 attrId);
bool p_OnOff_SetAttribReq(t_st_Packet* packet, u8 unitId, t_st_hanCmndIeSetAttributeValue* setAttrValue);
bool p_OnOff_SetAttrReqWithRes(t_st_Packet* packet, u8 unitId, t_st_hanCmndIeSetAttributeValue* setAttrValue);
bool p_OnOff_OnRes(t_st_Packet* packet, u8 unitId, u8 response_code);
bool p_OnOff_OffRes(t_st_Packet* packet, u8 unitId, u8 response_code);
bool p_OnOff_ToggleRes(t_st_Packet* packet, u8 unitId, u8 response_code);
bool p_OnOff_GetAttribRes(t_st_Packet* packet, u8 unitId, t_st_hanCmndIeAttributeValue* attrValue);
bool p_OnOff_SetAttribRes(t_st_Packet* packet, u8 unitId, u8 response_code, u8 attrId);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////PRODUCTION////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool p_Production_StartRequest(t_st_Packet* packet);
bool p_Production_EndRequest(t_st_Packet* packet);
bool p_Production_ResetEepromReq(t_st_Packet* packet, t_en_hanCmndMsgProdResetEeprom EeepromType);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////PARAMETERS////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_Parameters_ParamGetReq(t_st_Packet* packet, t_st_hanCmndIeParameter* parameter);
bool p_Parameters_ParamGetDirectReq(t_st_Packet* packet, t_st_hanCmndIeParameterDirect* parameter);
bool p_Parameters_ParamSetReq(t_st_Packet* packet, t_st_hanCmndIeParameter* parameter);
bool p_Parameters_ParamSetDirectReq(t_st_Packet* packet, t_st_hanCmndIeParameterDirect* parameter);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////SLEEP////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool p_Sleep_Cfm(t_st_Packet* packet);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////TAMPER////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_Tamper_NotifyStatusReq(t_st_Packet* packet, u8 unitId, u8 alertStatus);
bool p_Tamper_NotifyStatusRes(t_st_Packet* packet, u8 unitId, u8 response_code);


///////////////////////////////////////////////////////////////////////////////
/////////////////////////////SYSTEM////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_System_ResetReq(t_st_Packet* packet);
bool p_System_GetRssi(t_st_Packet* packet);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////VOICE CALL////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

bool p_VoiceCall_StartCallReq(t_st_Packet* packet, u8 unitId, const t_st_hanCmndIeUleCallSetting* callSettings);
bool p_VoiceCall_EndCallReq(t_st_Packet* packet, u8 unitId);
bool p_VoiceCall_StartCallRes(t_st_Packet* packet, u8 unitId, u8 response_code, const t_st_hanCmndIeUleCallSetting* callSettings);
bool p_VoiceCall_EndCallRes(t_st_Packet* packet, u8 unitId, u8 response_code);
bool p_VoiceCall_SetVolumeReq(t_st_Packet* packet, u8 unitId, u8 volume);
bool p_VoiceCall_UpVolumeReq(t_st_Packet* packet, u8 unitId);
bool p_VoiceCall_DownVolumeReq(t_st_Packet* packet, u8 unitId);

extern_c_end

#endif //CMDN_PACKET_CREATOR_H
